package gsrs.module.substance.chem;

import static org.junit.Assert.assertTrue;

import java.io.IOException;
import java.util.stream.IntStream;

import org.junit.jupiter.api.Test;

import gov.nih.ncats.molwitch.Atom;
import gov.nih.ncats.molwitch.Bond.BondType;
import gov.nih.ncats.molwitch.Chemical;
import gov.nih.ncats.molwitch.MolwitchException;
import ix.core.chem.ChemAligner;

public class ChemAlignTest {

    @Test
    public void confirmAlignedChemicalIsAligned() throws IOException {

        Chemical query=Chemical.parseMol(
                "\n"
                + "   JSDraw204012117322D\n"
                + "\n"
                + " 10 10  0  0  0  0              0 V2000\n"
                + "   18.1480   -9.1520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   16.7970   -8.3720    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   16.7970   -6.8120    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   19.4990   -8.3720    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   19.4990   -6.8120    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   18.1480   -6.0320    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   20.8500   -6.0320    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   20.8500   -7.5920    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   22.4100   -7.5920    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   22.4100   -9.1520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "  1  2  2  0  0  0  0\n"
                + "  2  3  1  0  0  0  0\n"
                + "  1  4  1  0  0  0  0\n"
                + "  4  5  2  0  0  0  0\n"
                + "  5  6  1  0  0  0  0\n"
                + "  6  3  2  0  0  0  0\n"
                + "  5  7  1  0  0  0  0\n"
                + "  7  8  1  0  0  0  0\n"
                + "  8  9  1  0  0  0  0\n"
                + "  9 10  1  0  0  0  0\n"
                + "M  END"
                );
        Chemical target = Chemical.parseMol(
                "\n"
                + "   JSDraw204012117322D\n"
                + "\n"
                + " 13 13  0  0  0  0              0 V2000\n"
                + "   35.2627   -5.8383    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   36.8211   -5.9094    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   37.5387   -7.2946    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   34.4219   -7.1524    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   35.1395   -8.5375    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   36.6979   -8.6086    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   34.2988   -9.8516    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   33.5811   -8.4664    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   32.1960   -9.1840    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   31.4784   -7.7989    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   39.0971   -7.3657    0.0000 P   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   37.6618   -4.5954    0.0000 P   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   34.5451   -4.4532    0.0000 P   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "  1  2  2  0  0  0  0\n"
                + "  2  3  1  0  0  0  0\n"
                + "  1  4  1  0  0  0  0\n"
                + "  4  5  2  0  0  0  0\n"
                + "  5  6  1  0  0  0  0\n"
                + "  6  3  2  0  0  0  0\n"
                + "  5  7  1  0  0  0  0\n"
                + "  7  8  1  0  0  0  0\n"
                + "  8  9  1  0  0  0  0\n"
                + "  9 10  1  0  0  0  0\n"
                + "  3 11  1  0  0  0  0\n"
                + "  2 12  1  0  0  0  0\n"
                + "  1 13  1  0  0  0  0\n"
                + "M  END\n"
                + ""
                );

        int[] map = IntStream.range(0,query.getAtomCount()).toArray();
        double rmsdbefore=ChemAligner.rmsd(query, target, map);
        ChemAligner.align(query, target, map);
        double rmsdafter=ChemAligner.rmsd(query, target, map);
        
        assertTrue("RMSD of molecules after alignment should be less than before", rmsdafter<rmsdbefore);
        assertTrue("RMSD of molecules after alignment should be less than 0.001", rmsdafter<0.001);
    }
    

    @Test
    public void confirmAlignedChemicalIsAligned2() throws IOException {

        Chemical query=Chemical.parseMol(
                "\n"
                + "   JSDraw204012119282D\n"
                + "\n"
                + " 21 24  0  0  0  0              0 V2000\n"
                + "    3.2034   -3.8432    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    3.2369   -2.2836    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    4.6043   -1.5328    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    5.9382   -2.3416    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    5.9047   -3.9013    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    4.5373   -4.6521    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    4.5038   -6.2117    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    5.8377   -7.0205    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    7.2052   -6.2697    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    7.2387   -4.7101    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    8.7323   -4.2601    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    9.6219   -5.5416    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    8.6780   -6.7836    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    9.2817   -8.2220    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   10.8292   -8.4184    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   11.7730   -7.1764    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   11.1694   -5.7381    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   11.5800   -9.7858    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   10.2125  -10.5366    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   12.9474   -9.0350    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   12.3308  -11.1533    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "  1  2  1  0  0  0  0\n"
                + "  2  3  1  0  0  0  0\n"
                + "  3  4  1  0  0  0  0\n"
                + "  4  5  1  0  0  0  0\n"
                + "  5  6  1  0  0  0  0\n"
                + "  6  1  1  0  0  0  0\n"
                + "  6  7  1  0  0  0  0\n"
                + "  7  8  1  0  0  0  0\n"
                + "  8  9  1  0  0  0  0\n"
                + "  9 10  1  0  0  0  0\n"
                + " 10  5  1  0  0  0  0\n"
                + " 10 11  1  0  0  0  0\n"
                + " 11 12  1  0  0  0  0\n"
                + " 12 13  1  0  0  0  0\n"
                + " 13  9  1  0  0  0  0\n"
                + " 13 14  1  0  0  0  0\n"
                + " 14 15  1  0  0  0  0\n"
                + " 15 16  1  0  0  0  0\n"
                + " 16 17  1  0  0  0  0\n"
                + " 17 12  1  0  0  0  0\n"
                + " 15 18  1  0  0  0  0\n"
                + " 18 19  1  0  0  0  0\n"
                + " 18 20  1  0  0  0  0\n"
                + " 18 21  1  0  0  0  0\n"
                + "M  END\n"
                + ""
                );
        Chemical target = Chemical.parseMol(
                "\n"
                + "  CDK     04012119262D\n"
                + "\n"
                + " 22 25  0  0  0  0  0  0  0  0999 V2000\n"
                + "    3.2657    1.4282    0.0000 C   0  0  0  0  0  3  0  0  0  0  0  0\n"
                + "    4.5647    0.6782    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    4.5647   -0.8218    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    3.2657   -1.5718    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    1.9666   -0.8218    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    1.9666    0.6782    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    0.6676    1.4282    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   -0.6315    0.6782    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   -0.6315   -0.8218    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    0.6676   -1.5718    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    0.3557   -3.0391    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   -1.1361   -3.1958    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   -1.7462   -1.8255    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   -3.2380   -1.6687    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   -4.1196   -2.8823    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   -3.5095   -4.2526    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   -2.0177   -4.4094    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   -5.6114   -2.7255    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   -5.4546   -1.2337    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   -7.1032   -2.5687    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   -5.7682   -4.2172    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    3.2657    2.9282    0.0000 H   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "  1  2  1  0  0  0  0\n"
                + "  2  3  1  0  0  0  0\n"
                + "  3  4  1  0  0  0  0\n"
                + "  4  5  1  0  0  0  0\n"
                + "  5  6  1  0  0  0  0\n"
                + "  6  1  1  0  0  0  0\n"
                + "  6  7  1  0  0  0  0\n"
                + "  7  8  1  0  0  0  0\n"
                + "  8  9  1  0  0  0  0\n"
                + "  9 10  1  0  0  0  0\n"
                + " 10  5  1  0  0  0  0\n"
                + " 10 11  1  0  0  0  0\n"
                + " 11 12  1  0  0  0  0\n"
                + " 12 13  1  0  0  0  0\n"
                + " 13  9  1  0  0  0  0\n"
                + " 13 14  1  0  0  0  0\n"
                + " 14 15  1  0  0  0  0\n"
                + " 15 16  1  0  0  0  0\n"
                + " 16 17  1  0  0  0  0\n"
                + " 17 12  1  0  0  0  0\n"
                + " 15 18  1  0  0  0  0\n"
                + " 18 19  1  0  0  0  0\n"
                + " 18 20  1  0  0  0  0\n"
                + " 18 21  1  0  0  0  0\n"
                + "  1 22  1  0  0  0  0\n"
                + "M  END"
                );

        int[] map = IntStream.range(0,query.getAtomCount()).toArray();
        double rmsdbefore=ChemAligner.rmsd(query, target, map);
        ChemAligner.align(query, target, map);
        double rmsdafter=ChemAligner.rmsd(query, target, map);
        
//        System.out.println(target.toMol());
//        System.out.println(rmsdafter);
        assertTrue("RMSD of molecules after alignment should be less than before", rmsdafter<rmsdbefore);
        assertTrue("RMSD of molecules after alignment should be less than 1.0", rmsdafter<1);
    }
    
    @Test
    public void confirmAlignmentAfterCleanLooksGood() throws IOException {

        Chemical query=Chemical.parseMol(
                "\n"
                + "   JSDraw204012119462D\n"
                + "\n"
                + " 17 20  0  0  0  0              0 V2000\n"
                + "    3.2034   -3.8432    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    3.2369   -2.2836    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    4.6043   -1.5328    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    5.9382   -2.3416    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    5.9047   -3.9013    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    4.5373   -4.6521    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    4.5038   -6.2117    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    5.8377   -7.0205    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    7.2052   -6.2697    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    7.2387   -4.7101    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    8.7323   -4.2601    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    9.6219   -5.5416    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    8.6780   -6.7836    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "    9.2817   -8.2220    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   10.8292   -8.4184    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   11.7730   -7.1764    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "   11.1694   -5.7381    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n"
                + "  1  2  1  0  0  0  0\n"
                + "  2  3  1  0  0  0  0\n"
                + "  3  4  1  0  0  0  0\n"
                + "  4  5  1  0  0  0  0\n"
                + "  5  6  1  0  0  0  0\n"
                + "  6  1  1  0  0  0  0\n"
                + "  6  7  1  0  0  0  0\n"
                + "  7  8  1  0  0  0  0\n"
                + "  8  9  1  0  0  0  0\n"
                + "  9 10  1  0  0  0  0\n"
                + " 10  5  1  0  0  0  0\n"
                + " 10 11  1  0  0  0  0\n"
                + " 11 12  1  0  0  0  0\n"
                + " 12 13  1  0  0  0  0\n"
                + " 13  9  1  0  0  0  0\n"
                + " 13 14  1  0  0  0  0\n"
                + " 14 15  1  0  0  0  0\n"
                + " 15 16  1  0  0  0  0\n"
                + " 16 17  1  0  0  0  0\n"
                + " 17 12  1  0  0  0  0\n"
                + "M  END\n"
                + ""
                );
        Chemical oq = Chemical.parse(query.toSd());
        
        int[] map = IntStream.range(0,query.getAtomCount()).toArray();
        query.makeHydrogensExplicit();
        query=ChemAligner.align2DClean(query);
        double rmsdafter=ChemAligner.rmsd(query, oq, map);
        assertTrue("RMSD of molecule after hydrogenized auto-alignment should be less than 1", rmsdafter<1);
    }

}
